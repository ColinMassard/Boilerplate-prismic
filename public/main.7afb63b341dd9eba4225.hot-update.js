"use strict";
self["webpackHotUpdateboilerplate_prismic"]("main",{

/***/ "./app/index.js":
/*!**********************!*\
  !*** ./app/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var normalize_wheel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! normalize-wheel */ "./node_modules/normalize-wheel/index.js");
/* harmony import */ var normalize_wheel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(normalize_wheel__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/each */ "./node_modules/lodash/each.js");
/* harmony import */ var lodash_each__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_each__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var components_Preloader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! components/Preloader */ "./app/components/Preloader.js");
/* harmony import */ var pages_About__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pages/About */ "./app/pages/About/index.js");
/* harmony import */ var pages_Home__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! pages/Home */ "./app/pages/Home/index.js");
/* eslint-disable no-undef */





class App {
  constructor() {
    this.createContent();
    this.createPreloader();
    this.createPages();
    this.addEventListeners();
    this.addLinkListeners();
    this.onResize();
    this.update();
  }
  createPreloader() {
    this.preloader = new components_Preloader__WEBPACK_IMPORTED_MODULE_2__["default"]({
      canvas: this.canvas
    });
    this.preloader.once('completed', this.onPreloaded.bind(this));
  }
  createContent() {
    this.content = document.querySelector('.content');
    this.template = this.content.getAttribute('data-template');
  }
  createPages() {
    this.pages = {
      about: new pages_About__WEBPACK_IMPORTED_MODULE_3__["default"](),
      home: new pages_Home__WEBPACK_IMPORTED_MODULE_4__["default"]()
    };
    this.page = this.pages[this.template];
    this.page.create();
    this.onResize();
  }

  /****
   * EVENTS
   * ***/
  onPreloaded() {
    this.onResize();
    this.page.show();
  }
  onPopState() {
    this.onChange({
      url: window.location.pathname,
      push: false
    });
  }
  async onChange({
    url,
    push = true
  }) {
    await this.page.hide();
    const request = await window.fetch(url);
    if (request.status === 200) {
      const html = await request.text();
      const div = document.createElement('div');
      window.history.pushState({}, '', url);
      if (push) {
        window.history.pushState({}, '', url);
      }
      div.innerHTML = html;
      const divContent = div.querySelector('.content');
      this.template = divContent.getAttribute('data-template');
      this.navigation.onChange(this.template);
      this.content.setAttribute('data-template', this.template);
      this.content.innerHTML = divContent.innerHTML;
      this.canvas.onChangeEnd(this.template);
      this.page = this.pages[this.template];
      this.page.create();
      this.onResize();
      this.page.show();
      this.addLinkListeners();
      this.createAnimations();
    } else {
      console.log('Error');
    }
  }
  onResize() {
    if (this.page && this.page.onResize) {
      this.page.onResize();
    }
  }
  createAnimations() {
    const element = document.querySelectorAll('[data-animate]');
    if (element === null) return;
    const intersectionObserverScroll = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, {
      rootMargin: '0px'
    });
    element.forEach(animateElement => intersectionObserverScroll.observe(animateElement));
  }
  onTouchDown(event) {}
  onTouchMove(event) {}
  onTouchUp(event) {}
  onWheel(event) {
    const normalizedWheel = normalize_wheel__WEBPACK_IMPORTED_MODULE_0___default()(event);
    if (this.page && this.page.update) {
      this.page.onWheel(normalizedWheel);
    }
  }

  /****
   * LOOPS
   * ***/
  update() {
    if (this.page && this.page.update) {
      this.page.update();
    }
  }

  /****
   * LISTENERS
   * ***/
  addEventListeners() {
    window.addEventListener('mousewheel', this.onWheel.bind(this));
    window.addEventListener('mousedown', this.onTouchDown.bind(this));
    window.addEventListener('mousemove', this.onTouchMove.bind(this));
    window.addEventListener('mouseup', this.onTouchUp.bind(this));
    window.addEventListener('touchstart', this.onTouchDown.bind(this));
    window.addEventListener('touchmove', this.onTouchMove.bind(this));
    window.addEventListener('touchend', this.onTouchUp.bind(this));
    window.addEventListener('popstate', this.onPopState.bind(this));
    window.addEventListener('resize', this.onResize.bind(this));
  }
  addLinkListeners() {
    const links = document.querySelectorAll('a');
    lodash_each__WEBPACK_IMPORTED_MODULE_1___default()(links, link => {
      link.onclick = event => {
        if (link.hasAttribute('data-anchor') !== true && link.hasAttribute('target') !== true && link.hasAttribute('data-contact') !== true) {
          event.preventDefault();
          const {
            href
          } = link;
          this.onChange({
            url: href
          });
        }
      };
    });
    const socialLinks = document.querySelectorAll('p.social-link');
    lodash_each__WEBPACK_IMPORTED_MODULE_1___default()(socialLinks, link => {
      link.onclick = event => {
        event.preventDefault();
        window.open(link.getAttribute('data-link'), '_blank');
      };
    });
  }
}
new App();

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2288bfc00329335c2fdf")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,